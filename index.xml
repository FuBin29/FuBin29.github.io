<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fu Bin&#39;s Blog</title>
    <link>https://StupidRabbit29.github.io/</link>
    <description>Recent content on Fu Bin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Dec 2021 22:31:02 +0800</lastBuildDate>
    
	<atom:link href="https://StupidRabbit29.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Prml8</title>
      <link>https://StupidRabbit29.github.io/class/prml8/</link>
      <pubDate>Wed, 08 Dec 2021 22:31:02 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SVM</title>
      <link>https://StupidRabbit29.github.io/class/prml7/</link>
      <pubDate>Wed, 08 Dec 2021 22:30:54 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml7/</guid>
      <description>SVM 基本思想 假设数据是线性可分的，SVM使用线性判别函数 $f(x) = w^T x + b$ 来对数据进行分类，如果 $w^T x + b &amp;gt; 0$ 则分为正类，如果 $w^T x + b &amp;lt; 0$ 则分为负类。
对于数据点 $(x_i, y_i), y_i = +1/-1$ ， $y_i$ 为正确分类类别。
函数距离： $y_i(w^T x_i + b)$ 的正负可以表示分类的正确性和信心，为正代表分类正确。
几何距离： $|w^T x_i + b| / |w|$ 表示样本点 $x_i$ 到分类平面的距离。
与分类平面距离最近的样本点称为支持向量，进而构成支持平面。
分类器的分类间距 $\rho$ 指支持平面之间的距离。
SVM推导过程 核心思想：最大化分类间距 $\rho$ ，一种启发式思想，这样的噪声容忍性好，鲁棒性好，泛化能力强。
训练集 ${ (x_{i}, y_{i}) }_^{N}$ ，其中 $x_i \in R^D, y_i \in {+1, -1}$ 分别为输入数据点和类别。易得</description>
    </item>
    
    <item>
      <title>Prml6</title>
      <link>https://StupidRabbit29.github.io/class/prml6/</link>
      <pubDate>Wed, 08 Dec 2021 22:30:51 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Prml5</title>
      <link>https://StupidRabbit29.github.io/class/prml5/</link>
      <pubDate>Wed, 08 Dec 2021 22:30:47 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Prml4</title>
      <link>https://StupidRabbit29.github.io/class/prml4/</link>
      <pubDate>Wed, 08 Dec 2021 22:30:45 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Series2</title>
      <link>https://StupidRabbit29.github.io/math/series2/</link>
      <pubDate>Mon, 25 Oct 2021 21:28:58 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/series2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>矩阵序列</title>
      <link>https://StupidRabbit29.github.io/math/series1/</link>
      <pubDate>Mon, 25 Oct 2021 21:27:42 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/series1/</guid>
      <description>引言 一元多项式 $f(t) = c_0 + c_1 t+ \cdots + c_m t^m$
矩阵多项式 $f(A) = c_0 I + c_1 A+ \cdots + c_m A^m$
易见， $f(A)$ 是以矩阵为自变量且取值为矩阵的一类函数。
矩阵函数是一般的以矩阵为自变量且取值为矩阵的函数。
矩阵序列 定义：设有矩阵序列 ${A{(k)}=(a_{ij}{(k)}) }$ ，若对所有的 $i$ 和 $j$ ，当 $k$ 趋于无穷时， $a_{ij}^{(k)}$ 趋于 $a_{ij}$ ，则称 ${A^{(k)}}$ 收敛，并称矩阵 $A=(a_{ij})$ 是 ${A^{(k)}}$ 的极限，记做 \( \lim_{k \to \infty} A^{(k)} = A \) 若对某一组 $i$ 和 $j$ ， $a_{ij}^{(k)}$ 不收敛，则称 ${A^{(k)}}$ 发散。
定理：设 $A^{(k)} \in C^{m \times n}$ ，设 $| \cdot |$ 为任意广义矩阵范数，则</description>
    </item>
    
    <item>
      <title>Prml3</title>
      <link>https://StupidRabbit29.github.io/class/prml3/</link>
      <pubDate>Mon, 18 Oct 2021 12:56:49 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml3/</guid>
      <description>判别函数 线性判别函数 两类问题的判别函数（以二维模式样本为例） 若 $x$ 是二维模式样本 $x = (x_1, x_2)^T$ ，使用直线方程 $d(x) = w_1x_1 + w_2x_2 + w_3 = 0$ 来划分两类模式 的样本。则将一个不知类别的模式代入 $d(x)$ ，若 $d(x) \gt 0$ ，则 $x \in Y_1$ ；若 $d(x) \lt 0$ ，则 $x \in Y_2$ 。
讨论 用判别函数进行模式分类依赖的两个因素
 判别函数的几何性质：线性的和非线性的函数  线性的是一条直线； 非线性的可以是曲线、折线等； 线性判别函数建立起来比较简单（实际应用较多），非线性判别函数建立起来比较复杂。   判别函数的系数：判别函数的形式确定后，主要就是确定判别函数的系数问题  只要被研究的模式是可分的，就能用给定的模式样本集来确定判别函数的系数    $n$ 维线性判别函数 $$ d(x)=w_{1} x_{1}+w_{2} x_{2}+\cdots+w_{n} x_{n}+w_{n+1}=w_{0}^{T} x+w_{n+1} $$
其中 $w_0 = (w_1, w_2, \cdots, w_n)^T$ 称为权向量（或参数向量）。 $d(x)$ 也可以表示为 $d(x) = w^Tx$ 。其中， $x = (x_1, x_2, \cdots, x_n, 1)^T$ 称为增广模式向量， $w = (w_1, w_2, \cdots, w_{n+1})^T$ 称为增广权向量。</description>
    </item>
    
    <item>
      <title>Prml2</title>
      <link>https://StupidRabbit29.github.io/class/prml2/</link>
      <pubDate>Mon, 18 Oct 2021 12:56:44 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Prml1</title>
      <link>https://StupidRabbit29.github.io/class/prml1/</link>
      <pubDate>Mon, 18 Oct 2021 12:56:35 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Prml0</title>
      <link>https://StupidRabbit29.github.io/class/prml0/</link>
      <pubDate>Mon, 18 Oct 2021 12:56:31 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/class/prml0/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Norm2</title>
      <link>https://StupidRabbit29.github.io/math/norm2/</link>
      <pubDate>Tue, 12 Oct 2021 00:57:32 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/norm2/</guid>
      <description>定理
谱范数和F-范数都是酉不变范数，即对于任意酉矩阵 $P$ 和 $Q$ ，有 $|PAQ|=|A|$ 。
如果一个范数是酉不变范数，那么一定是奇异值的函数。
范数的应用 矩阵的可逆性条件 定理：设 $A \in C^{n \times n}$ ，且对 $C^{n \times n}$ 的矩阵范数 $| \cdot |$ ，满足 $|A| \lt 1$ ，则矩阵 $I-A$ 非奇异，且有 \( \| (I-A)^{-1} \| \le \frac {\|I\|} {1-\|A\|} \)
\[ \| I-(I-A)^{-1} \| \le \frac {\|A\|} {1-\|A\|} \]
可逆性证明：选取向量范数 $|x|{v}$ ，使得 $|A|$ 与 $|x|{v}$ 相容。如果 $\det (I-A) = 0$ ，则 $(I-A)x = 0$ 有非零解 $x_0$ ， $x_0 = Ax_0 \to |x0|{v} = |Ax0|{v} \le |A||x0|{v} \lt |x0|{v}$ ，产生了矛盾，故 $\det (I-A) \ne 0$ ，因此 $I-A$ 可逆。</description>
    </item>
    
    <item>
      <title>向量范数及其性质</title>
      <link>https://StupidRabbit29.github.io/math/norm1/</link>
      <pubDate>Tue, 12 Oct 2021 00:57:24 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/norm1/</guid>
      <description>向量范数的概念 定义 假设 $V$ 是数域 $K$ 上的线性空间，对 $V$ 的任一向量 $x$ ，定义一个实值函数 $|x|$ ，如果这个函数满足： （1）非负性： $|x| \ge 0$ ，且 $|x| = 0$ 当且仅当 $x = 0$ ； （2）齐次性： $|kx| = |k| |x|, k \in K, x \in V$ ； （3）三角不等式： $|x+y| \le |x| + |y|, x,y\in V$ 。 则称 $|x|$ 为 $V$ 上的向量范数。
注：（2）中 $|k|$ 表示绝对值（ $K=R$ ）或模（ $K=C$ ）。
向量范数的性质  当 $|x| \ne 0$ 时， $\left| \frac{1}{|x|} x \right| = 1$ $\forall x \in V$ ， $|-x| = |x|$ $\forall x,y \in V$ ， $ |x| - |y| \le |x - y| $ ，同理 $ |y| - |x| \le |y - x| = |x - y| $  向量范数是定义在一般的线性空间上的，但是由于前面的讨论，我们知道任何 $n$ 维线性空间在一个基下都代数同构于常用的 $n$ 维复（或实）列向量空间，因此下面我们仅仅讨论 $n$ 维复（或实）列向量空间就足够了。</description>
    </item>
    
    <item>
      <title>Matrix3</title>
      <link>https://StupidRabbit29.github.io/math/matrix3/</link>
      <pubDate>Tue, 12 Oct 2021 00:53:13 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/matrix3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>矩阵论笔记（二） 线性变换</title>
      <link>https://StupidRabbit29.github.io/math/matrix2/</link>
      <pubDate>Thu, 16 Sep 2021 23:47:32 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/matrix2/</guid>
      <description>线性映射及矩阵表示 线性变换是线性映射的特例。
表示究是本质来说是一种映射，它把我们不熟悉或抽象的事物映射为我们熟知或具体的事物。
抽象的线性空间在一个基下可表示为实或复的列向量空间。同样地，线性空间之间的线性映射都可以表示为矩阵。这正是矩阵的代数本质所在。
定义：数域相同的线性空间 $X$ 到线性空间 $Y$ 的映射 $T$ 称为线性映射，若 $T$ 满足下列条件：
\[ \begin{align} &amp; T(x+y)=T(x)+T(y) \\ &amp; T(kx)=kT(x) \end{align} \]
矩阵的最小多项式 定义：在所有首项系数为 $1$ 的多项式中使得 $A$ 成为它的根的最小次数多项式 $m(\lambda)$ 称为 $A$ 的最小多项式。由 Hamilton-Cayley 定理知道矩阵 $A$ 的特征多项式为 $A$ 的零化多项式，因此最小多项式一定存在。</description>
    </item>
    
    <item>
      <title>矩阵论笔记（一） 线性空间</title>
      <link>https://StupidRabbit29.github.io/math/matrix1/</link>
      <pubDate>Tue, 07 Sep 2021 16:56:16 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/matrix1/</guid>
      <description>预备知识 集合 集合自身和空集都是集合的子集合，这两个子集合也称为当然子集合或假子集合，其他子集合称为非当然子集合或真子集合。
集合 $S_1$ 与 $S_2$ 的和集是指集合
\[ \left\{ x+y| x \in S_1, y \in S_2 \right\} \]
集合与其说是一个数学概念，还不如说是一种思维方式，即用集合(整体)的观点思考问题。整个数学发展的历史就是从特殊到一般，从个体到整体的发展历程。
例如：函数到泛函，欧氏空间到流形等。从不同中寻找相同，在相同中寻找不同。
数域 任意两个数关于和、差、积、商四则运算封闭的数集。
 任何数域中均有0，1 \(\forall a \in P, a \ne 0, \to \exists \frac 1 a \in P\) 任何数域都包含有理数域  映射 \[ \sigma : S \to S&#39; \]
对于 $S$ 中的任意一个元素在 $S&#39;$ 中仅有唯一的一个元素和它对应。
 满射： $S&#39;$ 中的每一个元素都能在 $S$ 中找到原象 单射： $S$ 中的每一个元素在 $S&#39;$ 中的象不同 一一映射：既是单射又是满射 若 $S&#39;$ 和 $S$ 相同，称 $\sigma$ 为变换 若 $S&#39;$ 为数域，称 $\sigma$ 为函数  矩阵 矩阵是线性映射的表示，本质就是线性映射。矩阵相加对应映射的相加，矩阵相乘对应映射的复合。</description>
    </item>
    
    <item>
      <title>线性代数笔记（二） 矩阵</title>
      <link>https://StupidRabbit29.github.io/math/linear_algebra2/</link>
      <pubDate>Fri, 03 Sep 2021 23:07:27 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/linear_algebra2/</guid>
      <description>矩阵的定义及运算 基本概念 一个 $m$ 行 $n$ 列的数表称为 $m \times n$ 矩阵 \(A=(a_{ i j}) _ {m \times n}\) 。 $m=n$ 时，称 \(A=(a_{i j}) _{n \times n}\) 为 $n$ 阶方阵。
 $a_{11}, a_{22}, \dots , a_{nn}$ 称为此方阵的对角元，所在对角线为主对角线。 $1 \times n$ 矩阵为 $n$ 维行向量 $m \times 1$ 矩阵为 $m$ 维列向量 向量的维数是其中所含元素个数。  同型矩阵：矩阵的行数和列数相等。
关键词：零矩阵、对角矩阵、数量矩阵、单位矩阵、上三角矩阵、下三角矩阵、实矩阵、复矩阵。
线性变换和矩阵一一对应。
矩阵加法  交换律： $A+B=B+A$ 结合律： $(A+B) +C=A+(B+C)$ $A+O=O+A=A$ 消去律： $A+C=B+C \Leftrightarrow A=B$  数乘运算  结合律： $(kl)A = k(lA)=l(kA)$ 分配律： $k(A+B)=kA+kB, (k+l)A=kA+lA$  矩阵乘法  矩阵乘法不满足交换律和消去律 当两个矩阵满足 $AB=BA$ 时，称 $A$ 与 $B$ 可交换，此时 $A$ 与 $B$ 必为同阶方阵（矩阵大小限制）。 结合律： $(AB)C=A(BC)$ 分配律： $(A+B)C=AC+BC, A(B+C)=AB+AC$ 两种乘法的结合律： $k(AB)=(kA)B=A(kB)$  \[ AB = C \]</description>
    </item>
    
    <item>
      <title>旅行摄影师唐僧摄影作品欣赏</title>
      <link>https://StupidRabbit29.github.io/photography/tangseng/</link>
      <pubDate>Thu, 02 Sep 2021 13:34:44 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/photography/tangseng/</guid>
      <description>一艘孤独的船 羊卓雍措 F 11 | 1/200 SEC | ISO 100 | 100 mm | 6 Pictures
F 22 | 30 SEC | ISO 125 | 198 mm | ND1000 + 偏振镜
F 5 | 164 SEC | ISO 100 | 39 mm | ND1000 + ND64 + 偏振镜
F 5.6 | 164 SEC | ISO 100 | 41 mm | ND1000 + ND64 + 偏振镜
F 4 | 1/2000 SEC | ISO 100 | 105 mm</description>
    </item>
    
    <item>
      <title>西藏之旅</title>
      <link>https://StupidRabbit29.github.io/photography/tibet/</link>
      <pubDate>Thu, 02 Sep 2021 11:18:25 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/photography/tibet/</guid>
      <description>摄影器材 Fujifilm X-H1
XF18-55 F2.8-4 R LM OIS
XF50-140 F2.8 R LM OIS WR
精选图片 </description>
    </item>
    
    <item>
      <title>《本杰明·巴顿奇事》</title>
      <link>https://StupidRabbit29.github.io/movie/benjamin_button/</link>
      <pubDate>Mon, 12 Oct 2020 23:13:44 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/movie/benjamin_button/</guid>
      <description>&amp;ndash; Some days I feel different than the day before.
&amp;ndash; Everybody feels different about themselves, one way or another. But we all going the same way. Just taking different roads to get there, that&amp;rsquo;s all. You&amp;rsquo;re on your own road, Benjamin
 Never know what&amp;rsquo;s coming for you.
 The Lord giveth and the Lord taketh away.
 &amp;ndash; I&amp;rsquo;d never thought about life or death that way before .</description>
    </item>
    
    <item>
      <title>Do not go gentle into that good night</title>
      <link>https://StupidRabbit29.github.io/poetry/do_not_go_gentle_into_that_good_night/</link>
      <pubDate>Sun, 27 Sep 2020 11:46:02 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/poetry/do_not_go_gentle_into_that_good_night/</guid>
      <description>《不要温和地走进那个良夜》是英国诗人狄兰·托马斯创作于20世纪中期的诗歌，写给他病危中的父亲，该诗歌表达了诗人对于死神将可爱的人们带离这个世界的愤怒，即“怒斥光明的消逝”。
 Do not go gentle into that good night,
Old age should burn and rave at close of day;
Rage, rage against the dying of the light.
Though wise men at their end know dark is right,
Because their words had forked no lightning they
Do not go gentle into that good night.
Good men, the last wave by, crying how bright
Their frail deeds might have danced in a green bay,</description>
    </item>
    
    <item>
      <title>线性代数笔记（一） 行列式</title>
      <link>https://StupidRabbit29.github.io/math/linear_algebra1/</link>
      <pubDate>Sat, 26 Sep 2020 09:46:59 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/math/linear_algebra1/</guid>
      <description>全排列和逆序数 全排列 自然排列 正序排列
逆序 在一个 \(n\) 元排列 \( p_1p_2\dots p_n \) 中，若一个大的数排在一个小的数前面，则称这两个数形成一个逆序，一个排列中所有的逆序的总数叫做这个排列的逆序数，记为 \( \tau (p_1p_2\dots p_n)\) 。
逆序数的性质  逆序数为奇数的排列称为奇排列，偶数的排列称为偶排列。 将一个排列中的某两个数的位置互换，其余数不动，得到一个全新排列，称这样的变换为一次对换，将相邻两个数对换，称为相邻对换  一次对换改变奇偶性 奇排列调换成自然排列的对换次数为奇数，偶排列为偶数  全体 \(n\) 元排列（\(n1\)）的集合中，奇排列和偶排列各一半。  行列式 将 \(n^2\) 个数 \(a_{ij}(i, j = 1, 2, \dots, n)\) 排成 \(n\) 行 \(n\) 列，在其左右加两条竖线，按照下式
\[ D_n =\begin{vmatrix}a_{11} &amp; a_{12} &amp; \cdots &amp; a_{1n} \\ a_{21} &amp; a_{22} &amp; \cdots &amp; a_{2n} \\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\ a_{n1} &amp; a_{n2} &amp; \cdots &amp; a_{nn} \\ \end{vmatrix} =\sum(-1)^{\tau (p_1p_2\dots p_n)}a_{1p_1}a_{2p_2}\dots a_{np_n} \]</description>
    </item>
    
    <item>
      <title>Hugo配置教程（二）网页布局及文章分类</title>
      <link>https://StupidRabbit29.github.io/tools/hugo_tutorial2/</link>
      <pubDate>Tue, 22 Sep 2020 10:00:35 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/tools/hugo_tutorial2/</guid>
      <description>修改首页的文章样式 文章概要 原本的概要会截取显示非常多的原文内容，我希望能够精简的描述文章内容，同时可以自定义概要。使用下面的方法可以使这部分文字变成每篇博客开头自定义的参数 Description 。
首先找到文件 /themes/Hyde/layouts/index.html ，然后将对应部分替换为下面的代码。
&amp;lt;article class=&amp;#34;post&amp;#34;&amp;gt; &amp;lt;h1 class=&amp;#34;post-title&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;{{ .Permalink }}&amp;#34;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt; &amp;lt;/h1&amp;gt; &amp;lt;time datetime=&amp;#34;{{ .Date.Format &amp;#34;2006-01-02T15:04:05Z0700&amp;#34; }}&amp;#34; class=&amp;#34;post-date&amp;#34;&amp;gt;{{ .Date.Format &amp;#34;2006-01-02 15:04:05&amp;#34; }}&amp;lt;/time&amp;gt; {{ .Description }} &amp;lt;!--{{ if .Truncated }}--&amp;gt; &amp;lt;!--&amp;lt;div class=&amp;#34;read-more-link&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;{{ .RelPermalink }}&amp;#34;&amp;gt;Read More…&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt;--&amp;gt; &amp;lt;!--{{ end }}--&amp;gt; &amp;lt;/article&amp;gt; 这里面的 {{ .Description }} 就是指用文章的参数 Description 作为首页上显示的文章概要。
同时不希望显示 Read More… 链接按钮。
日期 上面代码的这部分 .Date.Format &amp;quot;2006-01-02 15:04:05&amp;quot; }} 指明了我希望的日期风格。
文章分类 分类的原理 Hugo 本身提供非常方便的分类机制。</description>
    </item>
    
    <item>
      <title>北京优质影院汇总</title>
      <link>https://StupidRabbit29.github.io/movie/excellent_cinemas_in_bj/</link>
      <pubDate>Sat, 19 Sep 2020 21:15:40 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/movie/excellent_cinemas_in_bj/</guid>
      <description>优质数字IMAX影院汇总表    影城 区域 开业时间 屏幕尺寸 面积     华星UME 海淀 2006 23.91*13.84 330.91   卢米埃（长楹天街） 朝阳 2015 23.6*13 306.8   金泉港 朝阳 2017 23.66*12.55 296.93   石景山万达 石景山 2009 21.3*12.7 270.51   通州万达 通州 2014 22.3*11.7 260.91   西铁营万达 丰台 2017 21.39*11.25 240.64   槐房万达 丰台 2016 20.43*10.83 221.26                  华星UME 黄金座位：L-N排正中（偏后）</description>
    </item>
    
    <item>
      <title>《信条》</title>
      <link>https://StupidRabbit29.github.io/movie/tenet/</link>
      <pubDate>Sat, 19 Sep 2020 16:08:32 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/movie/tenet/</guid>
      <description>在看完信条几天后，终于大概搞懂了剧情以及关于时间的设定，所以来谈一谈。
2020.9.15 在金泉港影城观看IMAX版本
2020.9.20 在首创奥莱万达影城观看IMAX版本
时空逆转 把时间想象成一条川流不息的河流，我们所熟悉的是一去不复返的河流。过去、现在和未来分布在河流的不同地点，不会相遇并互相影响。我们仅对过去的事有记忆，对未来的事一无所知。
假如时间可逆，那么时间的河流就会变成下面的样子。
 整个世界的时间的流向没有改变，而是我一个人的时间发生了两次翻转； 原本一条线的时间之河在弯折过后，就有了重叠部分； 上一条属性导致了在同一时刻有两个我，一个是正向的我，一个是从未来逆向回来的我，那么究竟有几个我？只有一个我！这两个我都是我，正向的我，也会走逆向的我的同样的道路，就像河流一定会按照河道流淌一样； 时空时不能穿越的，想要回到过去可以，但是必须严格的一分一秒地逆行回去，再正向；  在时间逆转的节点会出现的神奇事件
突然出现的两个“我”
两个“我突然消失”
但是无论如何，在通过时间逆转机器——旋转门时，总是能通过玻璃看到对面的自己，除非机器故障或在机器内部死亡。
时间的长度/生命的长度 整个世界的发展 整个世界的河流是正向的，其中可能有很多个体采用时间逆转技术，来达到某种目的，但是，在一个时刻，事件发生了就是发生了，无法改变，因为如果可以通过逆转时间回去改变历史，那么这段逆流就已经被纳入考虑，最终的结果也会不一样。
时间钳形运动 两只小队，一队正向行动，一队逆向行动，这样两队全都能够获悉整个战场的全部信息，可以互相掩护，配合进攻。
一些无法解决的问题 个人意志与时间逆转的关系？
假如我看到时间逆转之后的自己做了事件A，那么作为正向的我，按照剧中的解释，未来也会时空逆转，然后做事件A。但是如果我看到时间逆转之后的自己做了事件A之后，个人意识让我去做事件B，那正向的我在经过时间逆转后是应该按照看到的那个自己做事件A，还是B，如果是A。
这同另外一个问题相似，为什么来自未来的信条组织，不能一开始就把全部作战思路“剧透”给主角，而是让主角去经历、感受，逐渐成长。如果告诉了主角，主角的个人意识会影响到整个后续的时空世界？
奥斯陆旋转门玻璃上的弹孔是什么时候出现的？
片尾的大楼有没有存在过？
归结为一个问题，我在原本正向的时间中逆向后，对周围环境造成的影响，是否会在逆向的时间中一直留存下去。比如说弹孔，逆向射击留下的弹孔，会一直逆向的保留下去吗，难道那块玻璃被建造的时候就有了弹孔？如果不是，在正向的人眼中，是什么时候突然出现（或是慢慢出现）的弹孔，如果从逆向来看，就是玻璃何时“痊愈”了。这些问题影片都没有解答。
总结 总的来看，这部电影还是非常不错的，特效和画面都很好，整体观感不错，不过经过我一天的分析，在大致理解导演在信条中展现的整个时空观后，逐渐发现了其中的一些不合逻辑的地方，一方面，与我们所处的现实世界不符，缺少理解的理论工具；另一方面，导演给出的设定，似乎也是不能自洽的。
时间逆转这个设定引起了我很大的兴趣，17号晚上和18号白天都在想这方面的内容，结合看完电影和竹倩叶的讨论，以及解读文章不断思考。这个过程我还是比较享受的，可以说这种需要动脑的电影还是很难得的，有着独特的魅力。就像星际穿越一样，引发了我对黑洞、时空、多维空间的思考。也许我想的或者说导演希望传达出的关于时空的理解是错误的，但是这都促进了我的思考，在这个无所事事的九月里，这是我为数不多的头脑风暴了。
总的来说，通过影片还是希望我们能够珍惜现在，把现在过好，只有现在是我们真正拥有的，可以努力提升自己、创造价值的。
二刷之后，对剧情理解更加深入了，结合之前的分析，基本能够理清时间线，并关注到了之前没注意到的细节。也发现带着疑问和对加下来剧情的熟悉，会对观影产生的影响。在知道进度条和高潮的位置之后，似乎会影响对过程的享受，会担心电影的截止。同时对关键情节的关注和急切地想要验证一些疑点，这些会使我忽视掉一些更平淡的细节，思路会走思，不会像第一遍观影时那样全神贯注地关注每一个场景和台词，想要抓住每一帧，每一秒，每一个场景，珍惜在影院的观影体验。这就是二刷带给我的体验，可以满足一些对细节的渴求，解答一些疑惑，验证影评中的分析，清楚地理解这种一遍看不懂的电影；但是过近的观影时间，没法让人在第二遍全神贯注地享受电影，由于丧失了第一遍的新鲜感，又还没有时间带来的陌生感、与“老朋友”长时间未见的那种兴奋感，二刷一个电影的体验其实并不算理想。
结合诺兰的演讲，他在所有的电影中贯穿的理念是时间，本片在深层意义上也反映出了他的这些人生哲学：
  梦想是虚拟的现实，现实是重要的。
  奥斯卡·王尔德：“老年人相信一切，中年人怀疑一切，年轻人知道一切”
  要追寻现实，以梦想为基础，改变现实，改进世界。
  观中队长同志信条解析有感：
我们不知道过去，就像不知道未来一样。如果从对称性的角度思考确实是这样的，我们现在相信我们知道过去发生的事，是因为我们没有时空机器。</description>
    </item>
    
    <item>
      <title>Hugo配置教程（一）创建网页并发布到github</title>
      <link>https://StupidRabbit29.github.io/tools/hugo_tutorial/</link>
      <pubDate>Tue, 08 Sep 2020 20:48:11 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/tools/hugo_tutorial/</guid>
      <description>安装Hugo 直接在官网下载Hugo最新版本，并设置环境变量 path ，然后在命令行中输入下列命令以检验是否安装成功。
hugo version 生成静态站点 使用下面的命令创建名为“myblog”的静态站点：
hugo new site myblog hugo new site 指令建立了网站的后台目录结构，但是是全空的，除了 /config.toml 中的少量配置内容。
可以使用下面的指令，预览网站
hugo server 之后通过浏览器访问http://localhost:1313，就可以看到一个空白的网站了。
选择网站主题 在站点根目录下，新建文件夹 themes ，然后从官网或其他资源平台下载自己喜欢的Hugo主题，我选择了Hyde，然后用 git 命令，下载这些 GitHub 平台上的主题到文件夹 themes 。
然后在顶层配置文件 /config.toml 中修改选用的主题。
上传文章 使用 hugo new 命令，可以在 content 目录下创建文件， content 目录下还可以设置多个目录，用作“section”来划分文章，使用 hugo new section/title.md 命令创建文件。
注意文章的属性 draft: false 一定要改为 false ，否则会被认为是草稿，而不进行渲染。
重新使用 hugo server 即可看到刚刚创建的文章已经显示在网页上了。
部署到GitHub 使用下面的命令进行部署
hugo --theme=hyde --baseUrl=&amp;quot;https://StupidRabbit29.github.io/&amp;quot; --buildDrafts 编写脚本文件 push.sh ，简化上传
hugo --theme=hyde --baseUrl=&amp;quot;https://StupidRabbit29.github.io/&amp;quot; --buildDrafts cd public git add .</description>
    </item>
    
  </channel>
</rss>