<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fu Bin&#39;s Blog</title>
    <link>https://StupidRabbit29.github.io/</link>
    <description>Recent content on Fu Bin&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Sep 2020 21:15:40 +0800</lastBuildDate>
    
	<atom:link href="https://StupidRabbit29.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>北京优质影院汇总</title>
      <link>https://StupidRabbit29.github.io/movie/excellent_cinemas_in_bj/</link>
      <pubDate>Sat, 19 Sep 2020 21:15:40 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/movie/excellent_cinemas_in_bj/</guid>
      <description>优质数字IMAX影院汇总表    影城 区域 开业时间 屏幕尺寸 面积     华星UME 海淀 2006 23.91*13.84 330.91   卢米埃（长楹天街） 朝阳 2015 23.6*13 306.8   金泉港 朝阳 2017 23.66*12.55 296.93   石景山万达 石景山 2009 21.3*12.7 270.51   通州万达 通州 2014 22.3*11.7 260.91   西铁营万达 丰台 2017 21.39*11.25 240.64   槐房万达 丰台 2016 20.43*10.83 221.26                  华星UME 黄金座位：L-N排正中（偏后）</description>
    </item>
    
    <item>
      <title>《信条》</title>
      <link>https://StupidRabbit29.github.io/movie/tenet/</link>
      <pubDate>Sat, 19 Sep 2020 16:08:32 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/movie/tenet/</guid>
      <description>在看完信条几天后，终于大概搞懂了剧情以及关于时间的设定，所以来谈一谈。
2020.9.15 在金泉港影城观看IMAX版本
2020.9.20 在首创奥莱万达影城观看IMAX版本
时空逆转 把时间想象成一条川流不息的河流，我们所熟悉的是一去不复返的河流。过去、现在和未来分布在河流的不同地点，不会相遇并互相影响。我们仅对过去的事有记忆，对未来的事一无所知。
假如时间可逆，那么时间的河流就会变成下面的样子。
 整个世界的时间的流向没有改变，而是我一个人的时间发生了两次翻转； 原本一条线的时间之河在弯折过后，就有了重叠部分； 上一条属性导致了在同一时刻有两个我，一个是正向的我，一个是从未来逆向回来的我，那么究竟有几个我？只有一个我！这两个我都是我，正向的我，也会走逆向的我的同样的道路，就像河流一定会按照河道流淌一样； 时空时不能穿越的，想要回到过去可以，但是必须严格的一分一秒地逆行回去，再正向；  在时间逆转的节点会出现的神奇事件
突然出现的两个“我”
两个“我突然消失”
但是无论如何，在通过时间逆转机器——旋转门时，总是能通过玻璃看到对面的自己，除非机器故障或在机器内部死亡。
时间的长度/生命的长度 整个世界的发展 整个世界的河流是正向的，其中可能有很多个体采用时间逆转技术，来达到某种目的，但是，在一个时刻，事件发生了就是发生了，无法改变，因为如果可以通过逆转时间回去改变历史，那么这段逆流就已经被纳入考虑，最终的结果也会不一样。
时间钳形运动 两只小队，一队正向行动，一队逆向行动，这样两队全都能够获悉整个战场的全部信息，可以互相掩护，配合进攻。
一些无法解决的问题 个人意志与时间逆转的关系？
假如我看到时间逆转之后的自己做了事件A，那么作为正向的我，按照剧中的解释，未来也会时空逆转，然后做事件A。但是如果我看到时间逆转之后的自己做了事件A之后，个人意识让我去做事件B，那正向的我在经过时间逆转后是应该按照看到的那个自己做事件A，还是B，如果是A。
这同另外一个问题相似，为什么来自未来的信条组织，不能一开始就把全部作战思路“剧透”给主角，而是让主角去经历、感受，逐渐成长。如果告诉了主角，主角的个人意识会影响到整个后续的时空世界？
奥斯陆旋转门玻璃上的弹孔是什么时候出现的？
片尾的大楼有没有存在过？
归结为一个问题，我在原本正向的时间中逆向后，对周围环境造成的影响，是否会在逆向的时间中一直留存下去。比如说弹孔，逆向射击留下的弹孔，会一直逆向的保留下去吗，难道那块玻璃被建造的时候就有了弹孔？如果不是，在正向的人眼中，是什么时候突然出现（或是慢慢出现）的弹孔，如果从逆向来看，就是玻璃何时“痊愈”了。这些问题影片都没有解答。
总结 总的来看，这部电影还是非常不错的，特效和画面都很好，整体观感不错，不过经过我一天的分析，在大致理解导演在信条中展现的整个时空观后，逐渐发现了其中的一些不合逻辑的地方，一方面，与我们所处的现实世界不符，缺少理解的理论工具；另一方面，导演给出的设定，似乎也是不能自洽的。
时间逆转这个设定引起了我很大的兴趣，17号晚上和18号白天都在想这方面的内容，结合看完电影和竹倩叶的讨论，以及解读文章不断思考。这个过程我还是比较享受的，可以说这种需要动脑的电影还是很难得的，有着独特的魅力。就像星际穿越一样，引发了我对黑洞、时空、多维空间的思考。也许我想的或者说导演希望传达出的关于时空的理解是错误的，但是这都促进了我的思考，在这个无所事事的九月里，这是我为数不多的头脑风暴了。
总的来说，通过影片还是希望我们能够珍惜现在，把现在过好，只有现在是我们真正拥有的，可以努力提升自己、创造价值的。
二刷之后，对剧情理解更加深入了，结合之前的分析，基本能够理清时间线，并关注到了之前没注意到的细节。也发现带着疑问和对加下来剧情的熟悉，会对观影产生的影响。在知道进度条和高潮的位置之后，似乎会影响对过程的享受，会担心电影的截止。同时对关键情节的关注和急切地想要验证一些疑点，这些会使我忽视掉一些更平淡的细节，思路会走思，不会像第一遍观影时那样全神贯注地关注每一个场景和台词，想要抓住每一帧，每一秒，每一个场景，珍惜在影院的观影体验。这就是二刷带给我的体验，可以满足一些对细节的渴求，解答一些疑惑，验证影评中的分析，清楚地理解这种一遍看不懂的电影；但是过近的观影时间，没法让人在第二遍全神贯注地享受电影，由于丧失了第一遍的新鲜感，又还没有时间带来的陌生感、与“老朋友”长时间未见的那种兴奋感，二刷一个电影的体验其实并不算理想。
结合诺兰的演讲，他在所有的电影中贯穿的理念是时间，本片在深层意义上也反映出了他的这些人生哲学：
  梦想是虚拟的现实，现实是重要的。
  奥斯卡·王尔德：“老年人相信一切，中年人怀疑一切，年轻人知道一切”
  要追寻现实，以梦想为基础，改变现实，改进世界。
  观中队长同志信条解析有感：
我们不知道过去，就像不知道未来一样。如果从对称性的角度思考确实是这样的，我们现在相信我们知道过去发生的事，是因为我们没有时空机器。</description>
    </item>
    
    <item>
      <title>Hugo配置教程（一）创建网页并发布到github</title>
      <link>https://StupidRabbit29.github.io/post/hugo_tutorial/</link>
      <pubDate>Tue, 08 Sep 2020 20:48:11 +0800</pubDate>
      
      <guid>https://StupidRabbit29.github.io/post/hugo_tutorial/</guid>
      <description>安装Hugo 直接在官网下载Hugo最新版本，并设置环境变量 path ，然后在命令行中输入下列命令以检验是否安装成功。
hugo version 生成静态站点 使用下面的命令创建名为“myblog”的静态站点：
hugo new site myblog hugo new site 指令建立了网站的后台目录结构，但是是全空的，除了 /config.toml 中的少量配置内容。
可以使用下面的指令，预览网站
hugo server 之后通过浏览器访问http://localhost:1313，就可以看到一个空白的网站了。
选择网站主题 在站点根目录下，新建文件夹 themes ，然后从官网或其他资源平台下载自己喜欢的Hugo主题，我选择了Hyde，然后用 git 命令，下载这些 GitHub 平台上的主题到文件夹 themes 。
然后在顶层配置文件 /config.toml 中修改选用的主题。
上传文章 使用 hugo new 命令，可以在 content 目录下创建文件， content 目录下还可以设置多个目录，用作“section”来划分文章。
注意文章的属性 draft: false 一定要改为 false ，否则会被认为是草稿，而不进行渲染。
重新使用 hugo server 即可看到刚刚创建的文章已经显示在网页上了。
部署到GitHub 使用下面的命令进行部署
hugo --theme=hyde --baseUrl=&amp;quot;https://StupidRabbit29.github.io/&amp;quot; --buildDrafts 编写脚本文件，简化上传
hugo --theme=hyde --baseUrl=&amp;quot;https://StupidRabbit29.github.io/&amp;quot; --buildDrafts cd public git add . git commit -m &amp;quot;$1 $2&amp;quot; git push -u origin master cd .</description>
    </item>
    
  </channel>
</rss>